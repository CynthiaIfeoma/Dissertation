#figure 4 - ATTACK TYPE
#Load required libraries
library(RColorBrewer)
library(dplyr)
library(readxl)
library(ggplot2)
library(gridExtra)
library(lubridate)
library(knitr)
library(tidyr)
library(scales)


# Function for safe data type conversion
safe_convert <- function(x, target_class) {
  tryCatch({
    if (target_class == "POSIXct") {
      as.POSIXct(x, format = "%Y-%m-%d %H:%M:%S")
    } else if (target_class == "Date") {
      as.Date(x)
    } else {
      as(x, target_class)
    }
  }, error = function(e) {
    warning(paste("Could not convert column to", target_class, "- keeping original"))
    x
  })
}

# Function to convert columns safely
convert_columns_safe <- function(df, column_types) {
  for (col in names(column_types)) {
    if (col %in% names(df)) {
      df[[col]] <- safe_convert(df[[col]], column_types[[col]][1])
    }
  }
  return(df)
}

# Load the datasets
data1 <- read_excel("/Users/cynthiaugwu/Downloads/global_terrorism_data.xlsx", col_types = "text")
data2 <- read_excel("/Users/cynthiaugwu/Downloads/gtd_Jan_June.xlsx", col_types = "text")

# Inspect the structure of both datasets
str(data1)
str(data2)

# Get the column types from data1
data1_types <- sapply(data1, class)

# Convert data1 and data2 using the safe conversion method
data1 <- convert_columns_safe(data1, data1_types)
data2 <- convert_columns_safe(data2, data1_types)

# Combine the datasets
combined_data <- rbind(data1, data2)

# Filter the data for Baloch Liberation Army (BLA)
bh_data <- filtered_data %>%
  filter(gname == "Boko Haram")

# Count the total number of BLA incidents
total_bh_incidents <- nrow(bh_data)

# Print the total number of BLA incidents
print(total_bh_incidents)

# Filter data for Baloch Liberation Army and Boko Haram
target_groups <- c("Baloch Liberation Army (BLA)", "Boko Haram")
filtered_data <- combined_data %>%
  filter(gname %in% target_groups)

# Print the number of rows for each group
print(filtered_data %>% count(gname))

# Calculate percentage distribution
calc_attack_type_dist <- function(group_data) {
  group_data %>%
    group_by(attacktype1_txt) %>%
    summarise(count = n()) %>%
    mutate(percentage = count / sum(count) * 100) %>%
    arrange(desc(percentage))
}

#Calculate percentage distribution for each group
results <- filtered_data %>%
  group_by(gname) %>%
  do(calc_attack_type_dist(.))

# Print results
print(results)

# Create a custom color palette
attack_types <- unique(results$attacktype1_txt)
custom_colors <- setNames(brewer.pal(8, "Set2"),attack_types)
# Visualize results
create_pie_chart <- function(data, group_name, color_palette) {
  ggplot(data, aes(x = "", y = percentage, fill = attacktype1_txt)) +
    geom_bar(stat = "identity", width = 1) +
    coord_polar("y", start = 0) +
    theme_void() +
    theme(
      legend.position = "right",
      legend.title = element_text(face = "bold"),  
      plot.title = element_text(hjust = 0.5, face = "bold")  
    ) +
    labs(title = paste(group_name),
         fill = "Attack Type") +
    scale_fill_manual(values = color_palette) +
    geom_text(aes(label = paste0(round(percentage, 1), "%")), 
              position = position_stack(vjust = 0.5),
              size = 2)
}

bla_chart <- create_pie_chart(
  results %>% filter(gname == "Baloch Liberation Army (BLA)"), 
  "Baloch Liberation Army (BLA)",
  custom_colors
)

boko_haram_chart <- create_pie_chart(
  results %>% filter(gname == "Boko Haram"), 
  "Boko Haram",
  custom_colors
)

# Combine the charts
combined_charts <- grid.arrange(bla_chart, boko_haram_chart, ncol = 2)
print(combined_charts)

